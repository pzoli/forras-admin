package hu.exprog.beecomposit.back.model;

import java.util.Arrays;

// Generated 2012.09.26. 11:18:58 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Version;

/**
 * Icon generated by hbm2java
 */
@Entity
@Table(name = "icon", schema = "public")
public class Icon implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = -781424549096840141L;
    private Long id;
    private String icon;
    private String description;
    private byte[] icon16x16;
    private byte[] icon32x32;
	@Version
	private Long version;


    public Icon() {
    }

    public Icon(Long id) {
        this.id = id;
    }

    public Icon(Long id, String icon, String description, byte[] icon16x16, byte[] icon32x32) {
        this.id = id;
        this.icon = icon;
        this.description = description;
        this.icon16x16 = icon16x16;
        this.icon32x32 = icon32x32;
    }

    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name = "iconid", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "icon", length = 64)
    public String getIcon() {
        return this.icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    @Column(name = "description", length = 512)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Column(name = "icon16x16")
    public byte[] getIcon16x16() {
        return this.icon16x16;
    }

    public void setIcon16x16(byte[] icon16x16) {
        this.icon16x16 = icon16x16;
    }

    @Column(name = "icon32x32")
    public byte[] getIcon32x32() {
        return this.icon32x32;
    }

    public void setIcon32x32(byte[] icon32x32) {
        this.icon32x32 = icon32x32;
    }

	public Long getVersion() {
		return version;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((description == null) ? 0 : description.hashCode());
		result = prime * result + ((icon == null) ? 0 : icon.hashCode());
		result = prime * result + Arrays.hashCode(icon16x16);
		result = prime * result + Arrays.hashCode(icon32x32);
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Icon other = (Icon) obj;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (icon == null) {
			if (other.icon != null)
				return false;
		} else if (!icon.equals(other.icon))
			return false;
		if (!Arrays.equals(icon16x16, other.icon16x16))
			return false;
		if (!Arrays.equals(icon32x32, other.icon32x32))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
}
